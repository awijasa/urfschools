apply plugin: 'war'
apply plugin: 'gaelyk'
apply plugin: 'appengine-geb'
apply plugin: 'eclipse'

def compatibilityVersion = 1.7
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-gaelyk-plugin:0.6'
        classpath 'org.gradle.api.plugins:gradle-appengine-geb-plugin:0.4'
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    def gaeVersion = '1.9.6'
    def groovyVersion = '2.3.6'

    compile "org.codehaus.groovy:groovy-all:${groovyVersion}"

    compile "com.google.appengine:appengine-api-1.0-sdk:$gaeVersion",
            "com.google.appengine:appengine-api-labs:$gaeVersion"

    compile 'org.sitemesh:sitemesh:3.0-alpha-2'

    compile 'org.gaelyk:gaelyk:2.1.2'


    testCompile 'org.gaelyk:gaelyk-spock:0.4'
    testCompile "com.google.appengine:appengine-api-stubs:$gaeVersion",
            "com.google.appengine:appengine-testing:$gaeVersion"

    functionalTestCompile 'org.seleniumhq.selenium:selenium-firefox-driver:2.40.0'
    functionalTestCompile 'org.gebish:geb-spock:0.9.2'

    appengineSdk "com.google.appengine:appengine-java-sdk:$gaeVersion"


    /**
     * To add binary plugin just declare it as a dependency. For example,
     * uncomment following to add GPars support to your Gaelyk project.
     * @see https://github.com/musketyr/gpars-appengine
     */
    // compile 'org.codehaus.gpars:gpars-appengine:0.1'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2', transitive: false
    compile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.3.3', transitive: false
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.5', transitive: false
    compile group: 'org.codehaus.groovy.modules.http-builder', name: 'http-builder', version: '0.7.2', transitive: false

    /**
     * Gaelyk console serves as playground or key-hole surgery tool for
     * your application
     * @see https://github.com/gaelyk/gaelyk-console
     */
    // compile 'org.gaelyk:gaelyk-console:2.0'

}

eclipse {
	project {
		name 'gaelyk-project'
		file {
			whenMerged { project ->
				project.natures << 'com.google.appengine.eclipse.core.gaeNature'
				project.natures << 'com.google.gdt.eclipse.core.webAppNature'
				project.buildCommands << [name: 'com.google.appengine.eclipse.core.enhancerbuilder']
				project.buildCommands << [name: 'com.google.appengine.eclipse.core.projectValidator']
				project.buildCommands << [name: 'com.google.gdt.eclipse.core.webAppProjectValidator']
			}
		}
	}
	classpath {
		file {
			withXml { xml ->
				xml.asNode().classpathentry.find { it.@kind == 'output' && it.@path == 'bin' }.@path = 'src/main/webapp/WEB-INF/classes'
				xml.asNode().appendNode('classpathentry', [kind: 'con', path: 'com.google.appengine.eclipse.core.GAE_CONTAINER'])
							.appendNode('attributes')
							.appendNode('attribute', [name: 'org.eclipse.jst.component.nondependency', value: '/src/main/webapp/WEB-INF/lib'])
				xml.asNode().appendNode('classpathentry', [exported: 'true', kind: 'con', path: 'GROOVY_SUPPORT'])
							.appendNode('attributes')
							.appendNode('attribute', [name: 'org.eclipse.jst.component.nondependency', value: '/src/main/webapp/WEB-INF/lib'])
			}
		}
	}
}